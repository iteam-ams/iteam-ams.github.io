openapi: 3.0.1
info:
  title: iTeam AMS-Api
  description: iTeam AMS-Api openApi Spec
  version: v1
servers:
- url: http://localhost:8080
  description: Api server url
tags:
- name: Classrooms
  description: the classroom API
  x-tag-expanded: false
- name: Curricula
  description: the Curricula API
  x-tag-expanded: false
- name: Staff
  description: the Staff API
  x-tag-expanded: false
- name: Faculty
  description: the Faculty API
  x-tag-expanded: false
paths:
  /api/term/{id}:
    get:
      tags:
      - Curricula
      operationId: getTerm
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Term'
    put:
      tags:
      - Curricula
      operationId: updateTerm
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Term'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Term'
    delete:
      tags:
      - Curricula
      operationId: deleteTerm
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /api/professorgroup/{id}:
    get:
      tags:
      - Staff
      operationId: getProfessorGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessorGroup'
    put:
      tags:
      - Staff
      operationId: updateProfessorGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfessorGroup'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessorGroup'
    delete:
      tags:
      - Staff
      operationId: deleteProfessorGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /api/professor/{id}:
    get:
      tags:
      - Staff
      operationId: getProfessor
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Professor'
    put:
      tags:
      - Staff
      operationId: updateProfessor
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Professor'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Professor'
    delete:
      tags:
      - Staff
      operationId: deleteProfessor
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /api/faculty/{id}:
    get:
      tags:
      - Faculty
      operationId: getFaculty
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
    put:
      tags:
      - Faculty
      operationId: updateFaculty
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Faculty'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
    delete:
      tags:
      - Faculty
      operationId: deleteFaculty
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/discipline/{id}:
    get:
      tags:
      - Curricula
      operationId: getDiscipline
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discipline'
    put:
      tags:
      - Curricula
      operationId: updateDiscipline
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discipline'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discipline'
    delete:
      tags:
      - Curricula
      operationId: deleteDiscipline
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /api/department/{id}:
    get:
      tags:
      - Faculty
      summary: Get a specific Department
      operationId: getDepartment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
        "404":
          description: NOT_FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
      - Faculty
      operationId: updateDepartment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
    delete:
      tags:
      - Faculty
      operationId: deleteDepartment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /api/course/{id}:
    get:
      tags:
      - Curricula
      operationId: getCourse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
    put:
      tags:
      - Curricula
      operationId: updateCourse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
    delete:
      tags:
      - Curricula
      operationId: deleteCourse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /api/classrooms/{id}:
    get:
      tags:
      - Classrooms
      operationId: getClassRoom
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassRoom'
    put:
      tags:
      - Classrooms
      operationId: updateClassRoom
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassRoom'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassRoom'
    delete:
      tags:
      - Classrooms
      operationId: deleteClassroom
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
  /api/term:
    get:
      tags:
      - Curricula
      summary: List All Terms
      operationId: listTerms
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Term'
    post:
      tags:
      - Curricula
      operationId: addTerm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Term'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Term'
  /api/professorgroup:
    get:
      tags:
      - Staff
      summary: List All ProfessorGroups
      operationId: listProfessorGroups
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProfessorGroup'
    post:
      tags:
      - Staff
      operationId: addProfessorGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfessorGroup'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessorGroup'
  /api/professor:
    get:
      tags:
      - Staff
      summary: List All Professors
      operationId: listProfessors
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Professor'
    post:
      tags:
      - Staff
      operationId: addProfessor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Professor'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Professor'
  /api/faculty:
    get:
      tags:
      - Faculty
      summary: List All Faculties
      operationId: listFaculties
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Faculty'
    post:
      tags:
      - Faculty
      operationId: addFaculty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Faculty'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faculty'
  /api/discipline:
    get:
      tags:
      - Curricula
      summary: List All Disciplines
      operationId: listDisciplines
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Discipline'
    post:
      tags:
      - Curricula
      operationId: addDiscipline
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discipline'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discipline'
  /api/department:
    get:
      tags:
      - Faculty
      summary: List Departments
      operationId: listDepartments
      parameters:
      - name: faculty
        in: query
        description: Filter by faculty code
        required: false
        schema:
          type: string
        example: FAD
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Department'
    post:
      tags:
      - Faculty
      operationId: addDepartment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Department'
  /api/course:
    get:
      tags:
      - Curricula
      summary: List All Courses
      operationId: listCourses
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
    post:
      tags:
      - Curricula
      operationId: addCourse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
  /api/classrooms:
    get:
      tags:
      - Classrooms
      summary: List All ClassRooms
      operationId: getAllClassRooms
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClassRoom'
    post:
      tags:
      - Classrooms
      operationId: addClassRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassRoom'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassRoom'
  /api/classrooms/types:
    get:
      tags:
      - Classrooms
      operationId: getClassTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClassRoomType'
    post:
      tags:
      - Classrooms
      operationId: addClassType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassRoomType'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassRoomType'
  /api/classrooms/types/{type}:
    delete:
      tags:
      - Classrooms
      summary: Delete a ClassRoom Type
      description: Notice this will remove the Associated type from existing ClassRooms
      operationId: deleteClassType
      parameters:
      - name: type
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
components:
  schemas:
    Term:
      required:
      - termNumber
      - yearName
      type: object
      properties:
        id:
          type: integer
          format: int32
        yearName:
          type: string
        termNumber:
          type: integer
          format: int32
    Professor:
      required:
      - category
      - firstName
      - gender
      - lastName
      - maxHours
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        gender:
          type: string
          enum:
          - Male
          - Female
          - Undefined
        birthdate:
          type: string
          format: date
        nationality:
          type: string
        title:
          type: string
        category:
          type: string
          enum:
          - PAE
          - PAK
          - Undefined
        department:
          type: integer
          format: int32
        position:
          type: string
        minHours:
          type: integer
          format: int32
        maxHours:
          type: integer
          format: int32
    ProfessorGroup:
      required:
      - assistants
      type: object
      properties:
        id:
          type: integer
          format: int32
        principal:
          $ref: '#/components/schemas/Professor'
        assistants:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Professor'
    Faculty:
      required:
      - code
      - name
      type: object
      properties:
        code:
          type: string
        name:
          type: string
    Department:
      required:
      - faculty
      - name
      - shortCode
      type: object
      properties:
        id:
          type: integer
          format: int32
        shortCode:
          type: string
        name:
          type: string
        faculty:
          type: string
    Discipline:
      type: object
      properties:
        id:
          type: integer
          format: int32
        shortCode:
          type: string
        name:
          type: string
        department:
          $ref: '#/components/schemas/Department'
        yearLevels:
          type: integer
          format: int32
    Course:
      required:
      - code
      - discipline
      - exercises
      - labs
      - lectures
      - practise
      - professorGroups
      - seminars
      - term
      - title
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        title:
          type: string
        discipline:
          $ref: '#/components/schemas/Discipline'
        term:
          $ref: '#/components/schemas/Term'
        lectures:
          type: integer
          format: int32
        seminars:
          type: integer
          format: int32
        labs:
          type: integer
          format: int32
        exercises:
          type: integer
          format: int32
        practise:
          type: integer
          format: int32
        professorGroups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProfessorGroup'
    ClassRoom:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        capacity:
          type: integer
          format: int32
        type:
          uniqueItems: true
          type: array
          items:
            type: string
    ClassRoomType:
      required:
      - name
      type: object
      properties:
        name:
          type: string
    ErrorResponse:
      required:
      - error
      - path
      - status
      - timestamp
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
          format: int32
        error:
          type: string
        path:
          type: string
